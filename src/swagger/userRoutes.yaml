openapi: 3.0.0
tags:
  - name: Users
    description: User-related operations

paths:
  /users:
    get:
      tags:
        - Users
      summary: Get all users
      description: Retrieve all users in the database. Restricted to admin users.
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successfully retrieved all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        500:
          description: Internal server error
    post:
      tags:
        - Users
      summary: Create a user
      description: Add a new user to the database. Restricted to admin users.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        201:
          description: User created successfully
        500:
          description: Internal server error

  /users/{id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      description: Retrieve a specific user by their ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user to retrieve
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found
    patch:
      tags:
        - Users
      summary: Update user by ID
      description: Update the details of a user by their ID. Restricted to admin users.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        200:
          description: User updated successfully
        404:
          description: User not found
        500:
          description: Internal server error
    delete:
      tags:
        - Users
      summary: Delete user by ID
      description: Remove a user from the database by their ID. Restricted to admin users.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user to delete
          schema:
            type: string
      responses:
        200:
          description: User deleted successfully
        404:
          description: User not found
        500:
          description: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the user
        fullName:
          type: string
          description: Full name of the user
        email:
          type: string
          description: Email address of the user
        role:
          type: string
          enum:
            - user
            - admin
          description: Role of the user
        createdAt:
          type: string
          format: date-time
          description: Date the user was created
        updatedAt:
          type: string
          format: date-time
          description: Date the user was last updated
    UserInput:
      type: object
      properties:
        fullName:
          type: string
          description: Full name of the user
        email:
          type: string
          description: Email address of the user
        password:
          type: string
          description: Password for the user account
        passwordConfirm:
          type: string
          description: Password confirmation for the user account
        role:
          type: string
          enum:
            - user
            - admin
          description: Role of the user
