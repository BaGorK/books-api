openapi: 3.0.0
tags:
  - name: Authentication
    description: User authentication and authorization

paths:
  /auth/signup:
    post:
      tags:
        - Authentication
      summary: User signup
      description: Register a new user. A user cannot set the role during signup.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupInput'
      responses:
        201:
          description: User created successfully
        400:
          description: Invalid input data (missing or invalid fields)
        500:
          description: Internal server error

  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate a user by email and password, and generate a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        400:
          description: Missing email or password
        401:
          description: Invalid email or password
        500:
          description: Internal server error

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: User logout
      description: Log out the user by clearing the JWT token from cookies.
      security:
        - bearerAuth: []
      responses:
        200:
          description: Logout successful
        401:
          description: Unauthorized (user not logged in)
        500:
          description: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    SignupInput:
      type: object
      properties:
        email:
          type: string
          format: email
          description: User's email address
        fullName:
          type: string
          description: Full name of the user
        password:
          type: string
          description: User's password
        passwordConfirm:
          type: string
          description: Password confirmation (must match password)
      required:
        - email
        - fullName
        - password
        - passwordConfirm

    LoginInput:
      type: object
      properties:
        email:
          type: string
          format: email
          description: User's email address
        password:
          type: string
          description: User's password
      required:
        - email
        - password

    LoginResponse:
      type: object
      properties:
        status:
          type: string
          description: Status of the login request
        token:
          type: string
          description: The JWT token returned on successful login
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/User'

    User:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the user
        fullName:
          type: string
          description: Full name of the user
        email:
          type: string
          format: email
          description: User's email address
        role:
          type: string
          description: Role of the user (e.g., admin, user)
        createdAt:
          type: string
          format: date-time
          description: Date the user was created
        updatedAt:
          type: string
          format: date-time
          description: Date the user was last updated
